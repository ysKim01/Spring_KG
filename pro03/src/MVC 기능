스프링에서 지원하는 MVC 기능의 특징
- 모델2 아키텍쳐를 지원한다.
- 스프링과 다른 모듈과의 연계가 용이하다
- 타일즈(tiles)나 사이트메시(sitemesh) 같은 View 기술과
의 연계가 용이하다.
- 태그 라이브러리를 통해 message 출력, thema 적용 그리고 
입력 폼을 보다 쉽게 구현 할 수 있다.

Model <> Controller <> View
브라우저 -> DispatcherServlet -> Controller

DispatcherServlet : 클라이언트의 요청을 전달받아 해당 요청
에 대한 컨트롤러를 선택하여 클라이언트의 요청을 전달한다. 또한 컨
트롤러가 반환한 값을 View에 전달하여 알맞은 응답을 생성한다.
HandlerMapping : 클라이언트가 요청한 URL을 처리할 컨트롤
러를 지정한다.
Controller : 클라이언트의 요청을 처리한 후 그 결과를 Dispa
tcherServlet에 전달한다.
ModelAndView : 컨트롤러가 처리한 결과 및 뷰 선택에 필요한 정
보를 저장한다.
ViewResolver : 컨트롤러의 처리 결과를 전달할 뷰를 지정한다.
View : 컨트럴러의 처리 결과 화면을 생성한다.

스프링 프레임워크 MVC 기능 수행 과정
1. 브라우저가 DispatcherServlet에 URL에 접근하여 해당 정
보를 요청한다.
2. 핸들러 매핑에서 해당 요청에 대한 매핑된 컨트롤러가 있는지 요청
한다.
3. 매핑된 컨트롤러에 대해 처리 요청한다.
4. 컨트롤러가 클라이언트의 요청을 처리한 결과와 View 이름을 
ModelAndView에 저장해서 DispatcherServlet으로 반환한다.
5. DispatcherServlet에서는 컨트롤러에서 보내온 View 이름
을 ViewResolver로 보내 해당 View를 요청한다.
6. ViewResolver는 요청한 View을 보낸다.
7. View의 처리 결과를 DispatcherServlet으로 보낸다.
8. DispatcherServlet은 최종 결과를 브라우저로 전송한다.

실습에 대한 파일 설명
web.xml : 브라우저에서 *.do 로 요청할 때 스프링의
DispatcherServlet 클래스가 요청을 받을 수 있게 서블릿 매핑
을 한다.
action-servlet.xml : 스프링 프레임워크에서 필요한 번들을
설정한다.
SimpleUrlController.java : 매핑된 요청에 대해 컨트롤러
의 기능을 수행한다.
index.jsp : 요청에 대해 컨트롤러가 브라우저로 전송하는 JSP페
이지이다.

com.spring.ex02
실습에 사용되는 스프링 클래스
- MultiActionController : URL 요청명으로 바로 컨트롤
러를 지정해서 사용할 수 있다.
- PropertiesMethodNameResolver : URL 요청명으로 컨
트롤러의 설정 파일에서 미리 설정된 메서드를 바로 호출해서 사용할 
수 있다.
- InternalResourceViewResolver : JSP 나 html 파일
과 같이 웹 애플리케이션의 내부 자원을 이용해 뷰를 생성하는 기능을
제공한다. 기본적으로 사용하는 View 클래스이며 prefix와 
suffix 프로퍼티를 이용해 경로를 지정할 수 있다.

실습에 사용되는 파일들
web.xml : 브라우저에서 "*.do"로 요청하면 스프링의 Dispat-
cherServlet 클래스가 요청을 받을 수 있게 서블릿 매핑을 설정한다.
action-servlet.xml : 스프링에서 필요한 번들을 설정한다.
UserController.java : 매핑된 요청에 대해 컨트롤러의 기능
을 수행한다.
loginForm.jsp : 로그인 창입니다.
result.jsp : 로그인 결과를 보여주는 JSP 페이지이다.















